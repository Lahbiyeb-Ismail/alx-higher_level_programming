Test case for the ``2-matrix_divided`` module
======================

Usage:
-------------------
-------------------

Importing the matrix_divided function from the 2-matrix_divided module:
  	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

		Divide all elements of a matrix by div, rounded to 2 decimals.
    
    >>> matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 3)
    [[0.5, 0.83, 1.17], [1.5, 1.83, 2.17]]
    
    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
    
    >>> matrix_divided((1, 2, 3, 4), 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    >>> matrix_divided([[1, 2, 'x'], [4, 5, 6]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], '2')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

